import unittest
from sudoku import *

class SudokuTests(unittest.TestCase):

    tests = []

    tests.append(
       ("Easy example from Warwick The Magazine",
       ['081074900', '004019307', '379085014', '007831000', '238456179', '006927400', '843562791', '762198543', '005743862'],
       ['681374925', '524619387', '379285614', '497831256', '238456179', '156927438', '843562791', '762198543', '915743862'],
       None,
       None,
       None))
    tests.append(
       ("Easy example from http://www.sudoku.com/",
       ['060104050', '008305600', '200609001', '800437006', '006852300', '700961004', '500703002', '007206900', '642598173'],
       ['963174258', '178325649', '254689731', '821437596', '496852317', '735961824', '589713462', '317246985', '642598173'],
       None,
       None,
       None))
    tests.append(
       ("Novemeber 2005 contest from http://www.sudoku.com/",
       ['000342000', '540070080', '002005406', '060200000', '308000204', '000008070', '609120500', '030080019', '000539000'],
       ['816342957', '543976182', '792815436', '467253891', '358791264', '921468375', '689127543', '235684719', '174539628'],
       None,
       None,
       None))
    tests.append(
       ("No. One from http://sudokublog.typepad.com/sudokublog/2005/08/two_and_three_i.html",
       ['000538400', '800007000', '437962851', '900605340', '700803005', '053004009', '004759160', '000001003', '001386000'],
       ['219538476', '865147932', '437962851', '982615347', '746893215', '153274689', '324759168', '678421593', '591386724'],
       None,
       None,
       None))
    tests.append(
       ("No. Two from http://sudokublog.typepad.com/sudokublog/2005/08/two_and_three_i.html",
       ['000004000', '000027486', '400803050', '009278300', '700030009', '003469800', '030702008', '248350000', '000900000'],
       ['800604000', '391527486', '400803050', '009278300', '784135009', '023469800', '930742008', '248350000', '000980000'],
       ['800604000', '391527486', '400803050', '009278300', '784135009', '023469800', '930742008', '248351007', '000986000'],
       ['852614793', '391527486', '467893152', '619278345', '784135629', '523469871', '936742518', '248351967', '175986234'],
       None))
    tests.append(
       ("No. Three from http://sudokublog.typepad.com/sudokublog/2005/08/two_and_three_i.html",
       ['508073190', '901600408', '000908035', '070000060', '002000900', '010000080', '190306000', '203007009', '687190304'],
       ['528473196', '931600478', '700918235', '070000560', '002700940', '010000780', '190306807', '203007619', '687190304'],
       ['528473196', '931600478', '700918235', '070000560', '002700940', '010000780', '190306807', '203007619', '687190304'],
       ['528473196', '931625478', '764918235', '379284561', '852761943', '416539782', '195346827', '243857619', '687192354'],
       None))
    tests.append(
       ("X-wings from http://sudokublog.typepad.com/sudokublog/2005/08/xwings.html",
       ['096047080', '000006000', '274108003', '560081207', '007002800', '428079031', '642813759', '000964328', '080725416'],
       ['196347582', '835296174', '274158963', '563481297', '917632845', '428579631', '642813759', '751964328', '389725416'],
       None,
       None,
       None))
    tests.append(
       ("http://blogs.sun.com/roller/page/danrice?entry=wednesday_sudoku_puzzle",
       ['006008070', '100600400', '004210003', '001080090', '260030184', '080060300', '600045700', '005001006', '010900500'],
       ['006408071', '170603400', '004217063', '001780690', '267539184', '089160307', '600045710', '005001006', '010906500'],
       ['006458071', '170693400', '004217063', '001780690', '267539184', '089160307', '600045710', '005001006', '010906500'],
       ['936458271', '172693458', '854217963', '341782695', '267539184', '589164327', '623845719', '795321846', '418976532'],
       None))
    tests.append(
       ("Hard or even impossible from http://langabi.name/blog/2005/07/15/soduku-solver",
       ['000010700', '000030005', '000890000', '320000500', '006000200', '008000090', '000020000', '900070001', '001460070'],
       ['000010700', '000030005', '000890000', '320000500', '006000200', '008000090', '000020000', '900070001', '001460070'],
       ['000010700', '000030005', '000890000', '320000500', '006000200', '008000090', '000020000', '900070001', '001460070'],
       None,
       None)) #Don't try second level supposition - it takes forever and may not work
    tests.append(
       ("Interlocking Triples Zero from http://sudokublog.typepad.com/sudokublog/2005/08/interlocking_tr.html",
       ['006809010', '000003600', '003207085', '290371000', '350624079', '000985032', '180006300', '005008000', '030702500'],
       ['506849013', '800153600', '013267085', '290371056', '350624079', '000985032', '180596300', '005438001', '030712508'],
       ['526849713', '879153624', '413267985', '298371456', '351624879', '647985132', '182596347', '765438291', '934712568'],
       None,
       None))
    tests.append(
       ("Interlocking Triples One from http://sudokublog.typepad.com/sudokublog/2005/08/interlocking_tr.html",
       ['051003040', '006051038', '380700520', '018000005', '000010000', '500000410', '067004153', '143675289', '020100674'],
       ['051003046', '006051038', '380700521', '018000305', '030510800', '500300410', '067004153', '143675289', '025130674'],
       ['051003046', '006051038', '380700521', '018000305', '030510800', '500300410', '067004153', '143675289', '025130674'],
       ['251983746', '476251938', '389746521', '718492365', '634517892', '592368417', '967824153', '143675289', '825139674'],
       None))
    tests.append(
       ("Interlocking Triples Two from http://sudokublog.typepad.com/sudokublog/2005/08/interlocking_tr.html",
       ['500830027', '700600100', '308004006', '180000002', '430070019', '900000074', '600100708', '804007001', '270086000'],
       ['500830427', '740600183', '308704006', '187000002', '430070019', '900000074', '603100708', '804307261', '271086005'],
       ['500830427', '740600183', '308704006', '187000002', '430070019', '900000074', '603100708', '804307261', '271086005'],
       ['569831427', '742695183', '318724956', '187469532', '435278619', '926513874', '653142798', '894357261', '271986345'],
       None))
    tests.append(
       ("A 'very hard Sudoku' from http://www.saidwhat.co.uk/sudokus/index.php",
       ['100802030', '700000020', '000560070', '008000900', '005217403', '004000700', '030089000', '020000008', '080004006'],
       ['159872634', '763001825', '842563179', '278000901', '695217483', '314008702', '030089207', '020000008', '080024006'],
       ['159872634', '763941825', '842563179', '278435961', '695217483', '314698752', '536189247', '421756398', '987324516'],
       None,
       None))
    tests.append(
       ("A 'Fiendish Sudoku' from http://www.saidwhat.co.uk/sudokus/index.php",
       ['030000014', '200500680', '900300000', '050010030', '080030070', '060020090', '000008002', '003004001', '570000000'],
       ['635782914', '247591683', '918346527', '752619438', '189435276', '364827195', '496178352', '823954761', '571263849'],
       None,
       None,
       None))
    tests.append(
       ("Angus Johnson",
       ['040300070', '800061000', '000087003', '006040010', '420010095', '010050600', '700630000', '000570001', '050004060'],
       ['140305876', '800061000', '000087103', '506040010', '420016095', '010050600', '701630000', '004570001', '050104060'],
       ['140305876', '800061000', '000087103', '506040010', '420016095', '010050600', '701630000', '004570001', '050104060'],
       ['149325876', '873461529', '265987143', '536849217', '428716395', '917253684', '791638452', '684572931', '352194768'],
       None))
    tests.append(
       ("http://sudoku.com/forums/viewtopic.php?t=1057",
       ['681735942', '592841637', '700000581', '006080203', '000000100', '009050470', '300000769', '917563824', '268479315'],
       ['681735942', '592841637', '700000581', '006080203', '000000100', '009050470', '300218769', '917563824', '268479315'],
       ['681735942', '592841637', '700000581', '006080203', '000000100', '009050470', '300218769', '917563824', '268479315'],
       ['681735942', '592841637', '734692581', '456187293', '873924156', '129356478', '345218769', '917563824', '268479315'],
       None))
    tests.append(
       ("Gallery: really tough puzzles, no 142. from http://www.paulspages.co.uk/sudoku/",
       ['850100000', '900000080', '600004003', '700000002', '308500100', '400090006', '200700004', '530000001', '100002070'],
       ['853169427', '914273685', '672854913', '795641832', '368527149', '421398756', '289715364', '537486291', '146932578'],
       None,
       None,
       None))
    tests.append(
       ("Gallery: outlaw puzzles, no 129. from http://www.paulspages.co.uk/sudoku/",
       ['900002600', '004000005', '007001000', '035080900', '600000004', '001007020', '000300800', '500000700', '002600001'],
       ['900002600', '004000005', '007001000', '035080900', '600000004', '001007020', '000300800', '500000700', '002600001'],
       ['900002600', '004000005', '007001000', '035080900', '600000004', '001007020', '000300800', '500000700', '002600001'],
       ['953742618', '124896375', '867531249', '235184967', '679253184', '481967523', '746315892', '518429736', '392678451'],
       None))
    tests.append(
       ("Gallery: outlaw puzzles, no 112. from http://www.paulspages.co.uk/sudoku/",
       ['800000600', '040500100', '070090000', '030020007', '600008004', '500000090', '000030020', '001006050', '004000003'],
       ['800000600', '040500100', '170090000', '430020007', '600008004', '500000090', '000030020', '301006050', '004000003'],
       ['800000600', '040500100', '170090000', '430020007', '600008004', '500000090', '000030020', '301006058', '004000003'],
       ['852314679', '943567182', '176892345', '438129567', '619758234', '527643891', '785431926', '391276458', '264985713'],
       None))
    tests.append(
       ("19-cell '#1' from Brain of Britain, http://sudoku.sourceforge.net/brain.htm#3x3",
       ['000040030', '980601000', '000000200', '000000001', '004050700', '600000000', '005000000', '000908076', '070030000'],
       ['000040030', '983621457', '000000200', '000000001', '004050700', '600000005', '005000000', '002918576', '070030000'],
       ['000040030', '983621457', '000000200', '000000001', '004050700', '600000005', '005000000', '002918576', '070030000'],
       ['267549138', '983621457', '541783269', '758392641', '314856792', '629174385', '195467823', '432918576', '876235914'],
       None))
    tests.append(
       ("19-cell '#4' - Hardest 3x3 ever - from Brain of Britain, http://sudoku.sourceforge.net/brain.htm#3x3",
       ['020000000', '000600003', '074080000', '000003002', '080040010', '600500000', '000010780', '500009000', '000000040'],
       ['026000000', '000600003', '074080000', '000003002', '080040010', '600500000', '000010780', '500009000', '000000040'],
       ['026000000', '000600003', '074080000', '000003002', '080040010', '600500000', '000010780', '500009000', '000000040'],
       ['126437958', '895621473', '374985126', '457193862', '983246517', '612578394', '269314785', '548769231', '731852649'],
       None))
    tests.append(
       ("Hard from Arjen Lentz for MySQL, http://forums.mysql.com/read.php?98,51406",
       #['043080250',  '600000000', '000001094', '900004070', '000608000', '010200003', '820500000', '000000005', '034090710'],
       ['043080250', '600000000', '000001094', '900004070', '000608000', '010200003', '820500000', '000000005', '534890710'],
       ['043980250', '600425000', '200001094', '900004070', '300608000', '410209003', '820500000', '000000005', '534890710'],
       ['043980250', '600425000', '200001094', '900004070', '300608000', '410209003', '820500000', '000000005', '534890710'],
       ['143986257', '679425381', '285731694', '962354178', '357618942', '418279563', '821567439', '796143825', '534892716'],
       None))
    tests.append(
       ("Ambiguous from Arjen Lentz for MySQL, http://forums.mysql.com/read.php?98,51406",
       #['043080250', '600000000', '000001094', '900004070', '000608000', '010200003', '020500000', '000000005', '034090710'],
       ['043080250', '600000000', '000001094', '900004070', '000608000', '010200003', '020500000', '000000005', '534890710'],
       ['043980250', '600425000', '200001094', '900004070', '300608000', '410209003', '020500000', '000000005', '534890710'],
       ['043980250', '600425000', '200001094', '900004070', '300608000', '410209003', '020500000', '000000005', '534890710'],
       ['043986250', '600425000', '200731694', '900304070', '300608040', '410209063', '020500000', '000100025', '534892716'],
       None))
    tests.append(
        ("top95 = 48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5....",
        ['480300000','000000071','020000000','705000060','000200800','000000000','001076000','300000400','000050000'],
        ['480300000','000000071','120000000','705000060','000200800','000000000','001076000','300000400','000053000'],
        ['480300000','000000071','120000000','705000060','000200800','000000000','001076000','300000400','000053000'],
        ['487312695','593684271','126597384','735849162','914265837','268731549','851476923','379128456','642953718'],
        None))

    for test in tests :
        name = test[0]

        x = sudoku(test[1])

        assertEqual(x.as_test_list(), test[1])

        x.check()
        assert x.as_test_list() == test[2], "Simple check failed"

        if test[3] is not None and not x.solved() :
            if test[3] <> test[2]: print "Overlapping (aka slicing and dicing) should helps"
            x.overlapping_3x3_and_row_or_col()
            #x.check()
            assert x.as_test_list() == test[3], "Overlapping failed"

        if test[4] is not None and not x.solved() :
            if test[4] <> test[3]: print "One level supposition helps"
            x.one_level_supposition()
            #x.check()
            assert x.as_test_list() == test[4], "One level supposition failed"

        if test[5] is not None and not x.solved() :
            if test[5] <> test[4]: print "Two level supposition helps"
            x.two_level_supposition()
            #x.check()
            assert x.as_test_list() == test[5], "Two level supposition failed"
    print "Builtin tests passed"
